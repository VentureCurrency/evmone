// evmone: Fast Ethereum Virtual Machine implementation
// Copyright 2023 The evmone Authors.
// SPDX-License-Identifier: Apache-2.0

#include <evmone_precompiles/modexp.hpp>
#include <gtest/gtest.h>
#include <array>

#include <test/utils/utils.hpp>
using namespace evmone::test;

TEST(evmmax, modexp)
{
    {
        evmc::bytes res;
        res.resize(32);
        EXPECT_TRUE(evmone::crypto::modexp(
            res.data(), res.size(), evmc::bytes{0x9}, evmc::bytes{0x5}, evmc::bytes{0x10}));
        EXPECT_EQ(res, "0000000000000000000000000000000000000000000000000000000000000009"_hex);
    }
    {
        evmc::bytes res;
        res.resize(32);
        EXPECT_TRUE(evmone::crypto::modexp(
            res.data(), res.size(), evmc::bytes{0x9}, evmc::bytes{0x5}, evmc::bytes{0x11}));
        EXPECT_EQ(res, "0000000000000000000000000000000000000000000000000000000000000008"_hex);
    }
    {
        evmc::bytes res;
        res.resize(32);
        EXPECT_TRUE(evmone::crypto::modexp(
            res.data(), res.size(), evmc::bytes{0x9}, evmc::bytes{0x5}, evmc::bytes{0x13}));
        EXPECT_EQ(res, "0000000000000000000000000000000000000000000000000000000000000010"_hex);
    }
    {
        evmc::bytes res;
        res.resize(32);
        EXPECT_TRUE(evmone::crypto::modexp(
            res.data(), res.size(), evmc::bytes{0x9}, evmc::bytes{0x5}, evmc::bytes{0x17}));
        EXPECT_EQ(res, "0000000000000000000000000000000000000000000000000000000000000008"_hex);
    }
    {
        evmc::bytes res;
        res.resize(32);
        EXPECT_TRUE(evmone::crypto::modexp(
            res.data(), res.size(), evmc::bytes{0x9}, evmc::bytes{0x5}, evmc::bytes{0x18}));
        EXPECT_EQ(res, "0000000000000000000000000000000000000000000000000000000000000009"_hex);
    }
    {
        evmc::bytes res;
        res.resize(1);
        EXPECT_TRUE(evmone::crypto::modexp(
            res.data(), res.size(), evmc::bytes{0x2}, evmc::bytes{0x3}, evmc::bytes{0x6}));
        EXPECT_EQ(res, "02"_hex);
    }
    {
        evmc::bytes res;
        res.resize(2);
        EXPECT_TRUE(evmone::crypto::modexp(res.data(), res.size(), evmc::bytes{0x2},
hex,
            evmc::bytes{0x0006}));
        EXPECT_EQ(res, "0002"_hex);
    }
    {
        evmc::bytes res;
        res.resize(1);
        EXPECT_TRUE(evmone::crypto::modexp(
            res.data(), res.size(), evmc::bytes{0x2}, evmc::bytes{0x3}, evmc::bytes{0x0}));
        EXPECT_EQ(res, "00"_hex);
    }
    {
        evmc::bytes res;
        res.resize(160);
        EXPECT_TRUE(evmone::crypto::modexp(res.data(), res.size(),
            "20000000000000000000000000000000000000000000000000000000000000000000000000000010200000000000000000000000000000000000000000000000000000000000000000000000000000102000000000000000000000000000000000000000000000000000000000000000000000000000001020000000000000000000000000000000000000000000000000000000000000000000000000000010"_hex,
            evmc::bytes{0x3},
            "60000000000000000000000000000000000000000000000000000000000000000000000000000010600000000000000000000000000000000000000000000000000000000000000000000000000000106000000000000000000000000000000000000000000000000000000000000000000000000000001060000000000000000000000000000000000000000000000000000000000000000000000000000010"_hex));
        EXPECT_EQ(res,
            "291b1e2948112b098f3c987bec2dbac8022f5e4ebd3d4c47f333b30e3de21ca3b8aca475da7d3240291b1e2948112b098f3c987bec2dbac8022f5e4ebd3d4c47f333b30e3de21ca3b8aca475da7d3240291b1e2948112b098f3c987bec2dbac8022f5e4ebd3d4c47f333b30e3de21ca3b8aca475da7d3240291b1e2948112b098f3c987bec2dbac8022f5e4ebd3d4c47f333b30e3de21ca3b8aca475da7d3240"_hex);
    }
    {
        evmc::bytes res;
        res.resize(320);
        EXPECT_TRUE(evmone::crypto::modexp(res.data(), res.size(),
hex,
            evmc::bytes{0x3},
hex));
        EXPECT_EQ(res,
            "2d408bba3fa657dbb2cd49d4a1d329966c23e59e10c2a65950af0c4b047e185de46ee3d11f9b6b202d408bba3fa657dbb2cd49d4a1d329966c23e59e10c2a65950af0c4b047e185de46ee3d11f9b6b202d408bba3fa657dbb2cd49d4a1d329966c23e59e10c2a65950af0c4b047e185de46ee3d11f9b6b202d408bba3fa657dbb2cd49d4a1d329966c23e59e10c2a65950af0c4b047e185de46ee3d11f9b6b202d408bba3fa657dbb2cd49d4a1d329966c23e59e10c2a65950af0c4b047e185de46ee3d11f9b6b202d408bba3fa657dbb2cd49d4a1d329966c23e59e10c2a65950af0c4b047e185de46ee3d11f9b6b202d408bba3fa657dbb2cd49d4a1d329966c23e59e10c2a65950af0c4b047e185de46ee3d11f9b6b202d408bba3fa657dbb2cd49d4a1d329966c23e59e10c2a65950af0c4b047e185de46ee3d11f9b6b20"_hex);
    }
    {
        evmc::bytes res;
        res.resize(1025);
        EXPECT_FALSE(evmone::crypto::modexp(res.data(), res.size(),
hex,
            evmc::bytes{0x3},
            "1060000000000000000000000000000010600000000000000000006000000000000000000000000000000000000000000000000000001060000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000106000000000000000000000000000000000000000000000000000000000000000000000000000001060000000000000000000000000000000000000000000000000000000000000000000000000000010600000000000000000000000000000000000000000000000000000000000000000000000000000106000000000000000000000000000000000000000000000000000000000000000000000000000001060000000000000000000000000000000000000000000000000000000000000000000000000000010600000000000000000000000000000000000000000000000000000000000000000000000000000106000000000000000000000000000000000000000000000000000000000000000000000000000001060000000000000000000000000000000000000000000000000000000000000000000000000000010600000000000000000000000000000000000000000000000000000000000000000000000000000106000000000000000000000000000000000000000000000000000000000000000000000000000001060000000000000000000000000000000000000000000000000000000000000000000000000000010600000000000000000000000000000000000000000000000000000000000000000000000000000106000000000000000000000000000000000000000000000000000000000000000000000000000001060000000000000000000000000000000000000000000000000000000000000000000000000000010600000000000000000000000000000000000000000000000000000000000000000000000000000106000000000000000000000000000000000000000000000000000000000000000000000000000001060000000000000000000000000000000000000000000000000000000000000000000000000000010600000000000000000000000000000000000000000000000000000000000000000000000000000106000000000000000000000000000000000000000000000000000000000000000000000000000001060000000000000000000000000000000000000000000000000000000000000000000000000000010600000000000000000000000000000000000000000000000000000000000000000000000000000106000000000000000000000000000000000000000000000000000000000000000000000000000001060000000000000000000000000000000000000000000000000000000000000000000000000000010"_hex));
    }
}
